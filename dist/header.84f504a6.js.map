{"version":3,"sources":["js/header.js"],"names":["canvas","document","querySelector","c","getContext","width","window","innerWidth","height","innerHeight","maxRadius","circleArray","colorArray","mouse","x","undefined","y","Circle","dx","dy","radius","minRadius","color","Math","floor","random","length","draw","beginPath","arc","PI","fillStyle","fill","update","init","i","push","animate","requestAnimationFrame","clearRect","addEventListener","event"],"mappings":";AACA,IAAIA,EAASC,SAASC,cAAc,UAChCC,EAAIH,EAAOI,WAAW,MAC1BJ,EAAOK,MAAQC,OAAOC,WACtBP,EAAOQ,OAASF,OAAOG,YACvB,IAAIC,EAAY,GACZC,EAAc,GACdC,EAAa,CACf,SACA,UACA,UACA,UACA,WAEEC,EAAQ,CACVC,OAAGC,EAAWC,OAAED,GAMlB,SAASE,EAAOH,EAAGE,EAAGE,EAAIC,EAAIC,GAEvBN,KAAAA,EAAIA,EACJE,KAAAA,EAAIA,EACJE,KAAAA,GAAKA,EACLC,KAAAA,GAAKA,EACLC,KAAAA,OAASA,EACTC,KAAAA,UAAYD,EACZE,KAAAA,MAAQV,EAAWW,KAAKC,MAAMD,KAAKE,SAAWb,EAAWc,SAGzDC,KAAAA,KAAO,WACVxB,EAAEyB,YACFzB,EAAE0B,IAAI,KAAKf,EAAG,KAAKE,EAAG,KAAKI,OAAQ,EAAa,EAAVG,KAAKO,IAAQ,GACnD3B,EAAE4B,UAAY,KAAKT,MACnBnB,EAAE6B,QAICC,KAAAA,OAAS,YAET,KAAKnB,EAAI,KAAKM,OAASb,YAAc,KAAKO,EAAI,KAAKM,OAAS,KACxDF,KAAAA,IAAM,KAAKA,KAEf,KAAKF,EAAI,KAAKI,OAASX,aAAe,KAAKO,EAAI,KAAKI,OAAS,KACzDD,KAAAA,IAAM,KAAKA,IAEbL,KAAAA,GAAK,KAAKI,GACVF,KAAAA,GAAK,KAAKG,GAGXN,EAAMC,EAAI,KAAKA,EAAI,IAAMD,EAAMC,EAAI,KAAKA,GAAK,IAAMD,EAAMG,EAAI,KAAKA,EAAI,IAAMH,EAAMG,EAAI,KAAKA,GAAK,GAC9F,KAAKI,OAASV,IACXU,KAAAA,QAAU,GAKV,KAAKA,OAAS,KAAKC,YACrBD,KAAAA,QAAU,GAGZO,KAAAA,QAOT,SAASO,IACPvB,EAAc,GACV,IAAA,IAAIwB,EAAE,EAAGA,EAAI,IAAKA,IAAK,CACvBrB,IAAAA,EAAIS,KAAKE,UAAYlB,WAAsB,EAATa,GAAcA,EAChDJ,EAAIO,KAAKE,UAAYhB,YAAuB,EAATW,GAAcA,EACjDF,EAA6B,GAAvBK,KAAKE,SAAW,IACtBN,EAA6B,GAAvBI,KAAKE,SAAW,IACtBL,EAAyB,EAAhBG,KAAKE,SAAe,EAEjCd,EAAYyB,KAAK,IAAInB,EAAOH,EAAGE,EAAGE,EAAIC,EAAIC,KAO5C,SAASiB,IACPC,sBAAsBD,GACtBlC,EAAEoC,UAAU,EAAG,EAAGhC,WAAYE,aAE1B,IAAA,IAAI0B,EAAE,EAAGA,EAAExB,EAAYe,OAAQS,IACjCxB,EAAYwB,GAAGF,SAOnB3B,OAAOkC,iBAAiB,YAAa,SAASC,GAC5C5B,EAAMC,EAAI2B,EAAM3B,EAChBD,EAAMG,EAAIyB,EAAMzB,IAIlBV,OAAOkC,iBAAiB,SAAU,WAChCxC,EAAOK,MAAQC,OAAOC,WACtBP,EAAOQ,OAASF,OAAOG,YACvByB,MAMFA,IACAG","file":"header.84f504a6.js","sourceRoot":"..\\src","sourcesContent":["//Variables-----------\r\nvar canvas = document.querySelector('canvas');\r\nvar c = canvas.getContext('2d');\r\ncanvas.width = window.innerWidth;\r\ncanvas.height = window.innerHeight;\r\nvar maxRadius = 40;\r\nvar circleArray = [];\r\nvar colorArray = [\r\n  '#C9DAE',\r\n  '#03F7EE', \r\n  '#00B295', \r\n  '#191516', \r\n  '#AB2346'\r\n];\r\nvar mouse = {\r\n  x: undefined, y:undefined\r\n}\r\n\r\n\r\n\r\n//Establish circle structure---------------------\r\nfunction Circle(x, y, dx, dy, radius) {\r\n  //Circle variables\r\n  this.x = x;\r\n  this.y = y;\r\n  this.dx = dx;\r\n  this.dy = dy;\r\n  this.radius = radius;\r\n  this.minRadius = radius;\r\n  this.color = colorArray[Math.floor(Math.random() * colorArray.length)];\r\n\r\n  //Draw circles\r\n  this.draw = function() {\r\n    c.beginPath();\r\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n    c.fillStyle = this.color;\r\n    c.fill();\r\n  }\r\n\r\n  //Check parameters\r\n  this.update = function() {\r\n    //Contain circles in the screen\r\n    if(this.x + this.radius > innerWidth || this.x - this.radius < 0) {\r\n      this.dx = -this.dx;\r\n    }\r\n    if(this.y + this.radius > innerHeight || this.y - this.radius < 0) {\r\n      this.dy = -this.dy;\r\n    }\r\n    this.x += this.dx;\r\n    this.y += this.dy;\r\n\r\n    //Grow circles if mouse is close\r\n    if (mouse.x - this.x < 50 && mouse.x - this.x > -50 && mouse.y - this.y < 50 && mouse.y - this.y > -50) {\r\n      if (this.radius < maxRadius) {\r\n        this.radius += 1;\r\n      }\r\n    }\r\n\r\n    //Shrink to original size if no mouse\r\n    else if (this.radius > this.minRadius) {\r\n      this.radius -= 1;\r\n    }\r\n\r\n    this.draw();\r\n  }\r\n}\r\n\r\n\r\n\r\n//Create circles, new ones on page resize--------\r\nfunction init() {\r\n  circleArray = [];\r\n  for(var i=0; i < 300; i++) {\r\n  var x = Math.random() * (innerWidth - radius * 2) + radius;\r\n  var y = Math.random() * (innerHeight - radius * 2) + radius;\r\n  var dx = (Math.random() - 0.5) * 2;\r\n  var dy = (Math.random() - 0.5) * 2;\r\n  var radius = Math.random() * 7 + 1;\r\n  var color = 'rgba(255, 0, 0, 0.9)';\r\n  circleArray.push(new Circle(x, y, dx, dy, radius));\r\n  }\r\n}\r\n\r\n\r\n\r\n//Animate circles, add all circles to array------\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n  c.clearRect(0, 0, innerWidth, innerHeight);\r\n\r\n  for(var i=0; i<circleArray.length; i++){\r\n    circleArray[i].update();\r\n  }\r\n}\r\n\r\n\r\n\r\n//Grow circles everytime mouse moves-------------\r\nwindow.addEventListener('mousemove', function(event) {\r\n  mouse.x = event.x;\r\n  mouse.y = event.y;\r\n});\r\n\r\n//Change canvas width when on page resize--------\r\nwindow.addEventListener('resize', function() {\r\n  canvas.width = window.innerWidth;\r\n  canvas.height = window.innerHeight;\r\n  init();\r\n});\r\n\r\n\r\n\r\n//Functions to create circles and animate--------\r\ninit();\r\nanimate();"]}